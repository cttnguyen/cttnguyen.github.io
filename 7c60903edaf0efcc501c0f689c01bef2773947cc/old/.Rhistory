library(plotly)
library(tidyverse)
library(googlesheets4)
library(openintro)
sheets_auth(email = "crystalmarriesdaniel@gmail.com")
invitations = read_sheet("https://docs.google.com/spreadsheets/d/1mwJ75RelvJ55I4E0B-CNApGICnRlaSuTCFX8s9OgSAQ/edit#gid=409297580",
sheet = 'Invitations', skip = 3) %>%
filter(!is.na(`Short Name`)) %>%
unite(col = "Address", contains("Address Line"), sep = " ", na.rm = T) %>%
transmute(`Inv #`,
State = str_extract(Address, "([A-Z]{2}|Norway|Vietnam)$"),
Category = case_when(
grepl("Family Friends", Category) ~ "Friends",
grepl("Family", Category) ~ "Family",
grepl("Friends", Category) ~ "Friends",
grepl("Party", Category) ~ "Friends",
grepl("friends", Category) ~ "Friends"))
invitations$State[which(invitations$`Inv #` == 30)] <- "Peru"
crosswalk = read_sheet("https://docs.google.com/spreadsheets/d/1mwJ75RelvJ55I4E0B-CNApGICnRlaSuTCFX8s9OgSAQ/edit#gid=409297580",
sheet = 'Invitations Crosswalk')
rsvp_df <- read_sheet("https://docs.google.com/spreadsheets/d/1ZwOWDuDJZc7m_LoD3RqU4FnDdfDZyvVn9jHjTQxp8JY/edit#gid=999873728")
# Extract name field
rsvp_names = rsvp_df$`Please list the first and last names of those attending the Saturday wedding, separated by commas (for example, "John Smith, Jane Smith, Jenny Smith").`
# Create variable for full name of first person on each RSVP
rsvp_df$full_name = rsvp_names %>%
strsplit(",") %>%
sapply(function(x) return(x[1]))
# Create variables for first and last name
rsvp_df = rsvp_df %>% separate(full_name, into = c("First Name",
"Last Name"))
df <- rsvp_df %>%
transmute(`First Name`,
`Last Name`,
Attending = pmax(`Number Attending the Friday Tea Ceremony`,
`Number Attending the Saturday Wedding & Reception`)) %>%
left_join(crosswalk, by = c("First Name", "Last Name")) %>%
filter(!is.na(`Inv #`)) %>%
left_join(invitations, by = "Inv #") %>%
select(Attending, State, Category, `Inv #`) %>%
add_row(State = 'MA', Category = 'Bride & Groom', Attending = 2, `Inv #` = 2) %>%
distinct() %>%
group_by(State, Category) %>%
summarise(Attending = sum(Attending)) %>%
mutate(hover = paste0(Category, ": ", Attending)) %>%
ungroup() %>%
group_by(State) %>%
summarise(Attending = sum(Attending), hover = paste(hover, collapse = "<br>")) %>%
add_row(State = state.abb[which(!(state.abb %in% .$State))],
Attending = 0,
hover = "") %>%
mutate(hover = paste0(abbr2state(State), "<br>", hover))
l <- list(color = toRGB("#343a40"), width = 2)
# specify some map projection/options
g <- list(
scope = 'usa',
projection = list(type = 'usa',
scale = 1),
showlakes = F,
# lakecolor = toRGB('white'),
subunitcolor = toRGB('white'),
bgcolor = "#343a40"
)
df
sheets_auth(email = "crystalmarriesdaniel@gmail.com")
invitations = read_sheet("https://docs.google.com/spreadsheets/d/1mwJ75RelvJ55I4E0B-CNApGICnRlaSuTCFX8s9OgSAQ/edit#gid=409297580",
sheet = 'Invitations', skip = 3) %>%
filter(!is.na(`Short Name`)) %>%
unite(col = "Address", contains("Address Line"), sep = " ", na.rm = T) %>%
transmute(`Inv #`,
State = str_extract(Address, "([A-Z]{2}|Norway|Vietnam)$"),
Category = case_when(
grepl("Family Friends", Category) ~ "Friends",
grepl("Family", Category) ~ "Family",
grepl("Friends", Category) ~ "Friends",
grepl("Party", Category) ~ "Friends",
grepl("friends", Category) ~ "Friends"))
invitations$State[which(invitations$`Inv #` == 30)] <- "Peru"
crosswalk = read_sheet("https://docs.google.com/spreadsheets/d/1mwJ75RelvJ55I4E0B-CNApGICnRlaSuTCFX8s9OgSAQ/edit#gid=409297580",
sheet = 'Invitations Crosswalk')
rsvp_df <- read_sheet("https://docs.google.com/spreadsheets/d/1ZwOWDuDJZc7m_LoD3RqU4FnDdfDZyvVn9jHjTQxp8JY/edit#gid=999873728")
# Extract name field
rsvp_names = rsvp_df$`Please list the first and last names of those attending the Saturday wedding, separated by commas (for example, "John Smith, Jane Smith, Jenny Smith").`
# Create variable for full name of first person on each RSVP
rsvp_df$full_name = rsvp_names %>%
strsplit(",") %>%
sapply(function(x) return(x[1]))
# Create variables for first and last name
rsvp_df = rsvp_df %>% separate(full_name, into = c("First Name",
"Last Name"))
df <- rsvp_df %>%
transmute(`First Name`,
`Last Name`,
Attending = pmax(`Number Attending the Friday Tea Ceremony`,
`Number Attending the Saturday Wedding & Reception`)) %>%
left_join(crosswalk, by = c("First Name", "Last Name")) %>%
filter(!is.na(`Inv #`)) %>%
left_join(invitations, by = "Inv #") %>%
select(Attending, State, Category, `Inv #`) %>%
add_row(State = 'MA', Category = 'Bride & Groom', Attending = 2, `Inv #` = 2) %>%
distinct() %>%
group_by(State, Category) %>%
summarise(Attending = sum(Attending)) %>%
mutate(hover = paste0(Category, ": ", Attending)) %>%
ungroup() %>%
group_by(State) %>%
summarise(Attending = sum(Attending), hover = paste(hover, collapse = "<br>")) %>%
add_row(State = state.abb[which(!(state.abb %in% .$State))],
Attending = 0,
hover = "") %>%
mutate(hover = paste0(abbr2state(State), "<br>", hover))
df$State
library(tidyverse)
library(plotly)
library(googlesheets4)
gs4_auth("cnguyen6292@gmail.com")
df0 <- read_sheet("https://docs.google.com/spreadsheets/d/18aQZMrWi4w12GxgWaHf9jwaJTOwtNPpOjUvhpkNOyYo/edit#gid=1357827845",
sheet = 1)
df <- df0 %>%
filter(Recurrance == "Monthly") %>%
mutate_at("Item", ~ case_when(str_detect(., 'Credit') ~ paste(Payer, .),
T ~ .)) %>%
mutate(Date = as.Date(paste0(Year, "-", str_pad(Month, 2, side = "left", pad = 0), "-01"), format = "%Y-%m-%d"),
group = case_when(str_detect(Item, "Rent|Credit") ~ "Big",
T ~))
df <- df0 %>%
filter(Recurrance == "Monthly") %>%
mutate_at("Item", ~ case_when(str_detect(., 'Credit') ~ paste(Payer, .),
T ~ .)) %>%
mutate(Date = as.Date(paste0(Year, "-", str_pad(Month, 2, side = "left", pad = 0), "-01"), format = "%Y-%m-%d"),
group = case_when(str_detect(Item, "Rent|Credit") ~ "Big",
T ~ "Small"))
df %>%
group_by(group) %>%
group_map( ~ plot_ly(.,
type = "scatter",
mode = "lines",
x = ~Date,
y = ~Amount,
color = ~Item,
colors = ~if_else(group[1:3] == rep('Big', 3),
c("#1f77b4", "#ff7f0e", "#2ca02c"),
c("#d62728", "#9467bd", "#8c564b"))),
.keep = T) %>%
subplot(nrows = 2,
shareX = T)
df <- df0 %>%
filter(Recurrance == "Monthly") %>%
mutate_at("Item", ~ case_when(str_detect(., 'Credit') ~ paste(Payer, .),
T ~ .)) %>%
mutate(Date = as.Date(paste0(Year, "-", str_pad(Month, 2, side = "left", pad = 0), "-01"), format = "%Y-%m-%d"),
group = case_when(str_detect(Item, "Rent|Credit|Savings") ~ "Big",
T ~ "Small"))
df %>%
group_by(group) %>%
group_map( ~ plot_ly(.,
type = "scatter",
mode = "lines",
x = ~Date,
y = ~Amount,
color = ~Item,
colors = ~if_else(group[1:3] == rep('Big', 3),
c("#1f77b4", "#ff7f0e", "#2ca02c"),
c("#d62728", "#9467bd", "#8c564b"))),
.keep = T) %>%
subplot(nrows = 2,
shareX = T)
